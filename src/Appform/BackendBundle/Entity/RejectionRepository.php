<?php

namespace Appform\BackendBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * FilterRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RejectionRepository extends EntityRepository
{
    public function sourcingHasDiscipline($sourcingCompany, $discipline)
    {
        return $this->createQueryBuilder('r')
            ->leftJoin('r.disciplinesList', 'd')
            ->where('r.vendor = :vendor')->setParameter('vendor', $sourcingCompany)
            ->andWhere('d.id = :disciplineId')->setParameter('disciplineId', $discipline)
            ->getQuery()
            ->getOneOrNullResult();
    }

    public function sourcingHasSpecialty($sourcingCompany, $specialty)
    {
        return $this->createQueryBuilder('r')
            ->leftJoin('r.specialtiesList', 's')
            ->where('r.vendor = :vendor')->setParameter('vendor', $sourcingCompany)
            ->andWhere('s.id = :specialtyId')->setParameter('specialtyId', $specialty)
            ->getQuery()
            ->getOneOrNullResult();
    }

    public function getDisciplinesHidePerVendor($sourcingCompany)
    {
        return $this->createQueryBuilder('r')
            ->leftJoin('r.disciplinesHide', 'd')
            ->select('d.id')
            ->where('r.vendor = :vendor')->setParameter('vendor', $sourcingCompany)
            ->getQuery()
            ->getArrayResult();
    }

    public function getSpecialtiesHidePerVendor($sourcingCompany)
    {
        return $this->createQueryBuilder('r')
            ->leftJoin('r.specialtiesHide', 's')
            ->select('s.id')
            ->where('r.vendor = :vendor')->setParameter('vendor', $sourcingCompany)
            ->getQuery()
            ->getArrayResult();
    }
}
